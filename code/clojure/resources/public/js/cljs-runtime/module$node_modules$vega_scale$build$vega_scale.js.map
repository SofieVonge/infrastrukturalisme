{
"version":3,
"file":"module$node_modules$vega_scale$build$vega_scale.js",
"lineCount":41,
"mappings":"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",
"sources":["node_modules/vega-scale/build/vega-scale.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_scale$build$vega_scale\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('d3-array'), require('d3-scale'), require('d3-interpolate'), require('vega-time')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'd3-array', 'd3-scale', 'd3-interpolate', 'vega-time'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.d3, global.d3, global.d3, global.vega));\n}(this, (function (exports, vegaUtil, d3Array, $, $$1, vegaTime) { 'use strict';\n\n  function _interopNamespace(e) {\n    if (e && e.__esModule) { return e; } else {\n      var n = Object.create(null);\n      if (e) {\n        Object.keys(e).forEach(function (k) {\n          if (k !== 'default') {\n            var d = Object.getOwnPropertyDescriptor(e, k);\n            Object.defineProperty(n, k, d.get ? d : {\n              enumerable: true,\n              get: function () {\n                return e[k];\n              }\n            });\n          }\n        });\n      }\n      n['default'] = e;\n      return Object.freeze(n);\n    }\n  }\n\n  var $__namespace = /*#__PURE__*/_interopNamespace($$1);\n\n  function bandSpace(count, paddingInner, paddingOuter) {\n    const space = count - paddingInner + paddingOuter * 2;\n    return count ? (space > 0 ? space : 1) : 0;\n  }\n\n  const Identity = 'identity';\n\n  const Linear = 'linear';\n  const Log = 'log';\n  const Pow = 'pow';\n  const Sqrt = 'sqrt';\n  const Symlog = 'symlog';\n\n  const Time = 'time';\n  const UTC = 'utc';\n\n  const Sequential = 'sequential';\n  const Diverging = 'diverging';\n\n  const Quantile = 'quantile';\n  const Quantize = 'quantize';\n  const Threshold = 'threshold';\n\n  const Ordinal = 'ordinal';\n  const Point = 'point';\n  const Band = 'band';\n  const BinOrdinal = 'bin-ordinal';\n\n  // categories\n  const Continuous = 'continuous';\n  const Discrete = 'discrete';\n  const Discretizing = 'discretizing';\n  const Interpolating = 'interpolating';\n  const Temporal = 'temporal';\n\n  function invertRange(scale) {\n    return function(_) {\n      let lo = _[0],\n          hi = _[1],\n          t;\n\n      if (hi < lo) {\n        t = lo;\n        lo = hi;\n        hi = t;\n      }\n\n      return [\n        scale.invert(lo),\n        scale.invert(hi)\n      ];\n    };\n  }\n\n  function invertRangeExtent(scale) {\n    return function(_) {\n      let range = scale.range(),\n          lo = _[0],\n          hi = _[1],\n          min = -1, max, t, i, n;\n\n      if (hi < lo) {\n        t = lo;\n        lo = hi;\n        hi = t;\n      }\n\n      for (i=0, n=range.length; i<n; ++i) {\n        if (range[i] >= lo && range[i] <= hi) {\n          if (min < 0) min = i;\n          max = i;\n        }\n      }\n\n      if (min < 0) return undefined;\n\n      lo = scale.invertExtent(range[min]);\n      hi = scale.invertExtent(range[max]);\n\n      return [\n        lo[0] === undefined ? lo[1] : lo[0],\n        hi[1] === undefined ? hi[0] : hi[1]\n      ];\n    };\n  }\n\n  function band() {\n    let scale = $.scaleOrdinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      let n = domain().length,\n          reverse = range[1] < range[0],\n          start = range[reverse - 0],\n          stop = range[1 - reverse],\n          space = bandSpace(n, paddingInner, paddingOuter);\n\n      step = (stop - start) / (space || 1);\n      if (round) {\n        step = Math.floor(step);\n      }\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) {\n        start = Math.round(start);\n        bandwidth = Math.round(bandwidth);\n      }\n      const values = d3Array.range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      if (arguments.length) {\n        domain(_);\n        return rescale();\n      } else {\n        return domain();\n      }\n    };\n\n    scale.range = function(_) {\n      if (arguments.length) {\n        range = [+_[0], +_[1]];\n        return rescale();\n      } else {\n        return range.slice();\n      }\n    };\n\n    scale.rangeRound = function(_) {\n      range = [+_[0], +_[1]];\n      round = true;\n      return rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      if (arguments.length) {\n        round = !!_;\n        return rescale();\n      } else {\n        return round;\n      }\n    };\n\n    scale.padding = function(_) {\n      if (arguments.length) {\n        paddingOuter = Math.max(0, Math.min(1, _));\n        paddingInner = paddingOuter;\n        return rescale();\n      } else {\n        return paddingInner;\n      }\n    };\n\n    scale.paddingInner = function(_) {\n      if (arguments.length) {\n        paddingInner = Math.max(0, Math.min(1, _));\n        return rescale();\n      } else {\n        return paddingInner;\n      }\n    };\n\n    scale.paddingOuter = function(_) {\n      if (arguments.length) {\n        paddingOuter = Math.max(0, Math.min(1, _));\n        return rescale();\n      } else {\n        return paddingOuter;\n      }\n    };\n\n    scale.align = function(_) {\n      if (arguments.length) {\n        align = Math.max(0, Math.min(1, _));\n        return rescale();\n      } else {\n        return align;\n      }\n    };\n\n    scale.invertRange = function(_) {\n      // bail if range has null or undefined values\n      if (_[0] == null || _[1] == null) return;\n\n      let lo = +_[0],\n          hi = +_[1],\n          reverse = range[1] < range[0],\n          values = reverse ? ordinalRange().reverse() : ordinalRange(),\n          n = values.length - 1, a, b, t;\n\n      // bail if either range endpoint is invalid\n      if (lo !== lo || hi !== hi) return;\n\n      // order range inputs, bail if outside of scale range\n      if (hi < lo) {\n        t = lo;\n        lo = hi;\n        hi = t;\n      }\n      if (hi < values[0] || lo > range[1-reverse]) return;\n\n      // binary search to index into scale range\n      a = Math.max(0, d3Array.bisectRight(values, lo) - 1);\n      b = lo===hi ? a : d3Array.bisectRight(values, hi) - 1;\n\n      // increment index a if lo is within padding gap\n      if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n      if (reverse) {\n        // map + swap\n        t = a;\n        a = n - b;\n        b = n - t;\n      }\n      return (a > b) ? undefined : domain().slice(a, b+1);\n    };\n\n    scale.invert = function(_) {\n      const value = scale.invertRange([_, _]);\n      return value ? value[0] : value;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    const copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point() {\n    return pointish(band().paddingInner(1));\n  }\n\n  var map = Array.prototype.map;\n\n  function numbers(_) {\n    return map.call(_, vegaUtil.toNumber);\n  }\n\n  const slice = Array.prototype.slice;\n\n  function scaleBinOrdinal() {\n    let domain = [],\n        range = [];\n\n    function scale(x) {\n      return x == null || x !== x\n        ? undefined\n        : range[(d3Array.bisect(domain, x) - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (arguments.length) {\n        domain = numbers(_);\n        return scale;\n      } else {\n        return domain.slice();\n      }\n    };\n\n    scale.range = function(_) {\n      if (arguments.length) {\n        range = slice.call(_);\n        return scale;\n      } else {\n        return range.slice();\n      }\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return $.tickFormat(domain[0], vegaUtil.peek(domain), count == null ? 10 : count, specifier);\n    };\n\n    scale.copy = function() {\n      return scaleBinOrdinal().domain(scale.domain()).range(scale.range());\n    };\n\n    return scale;\n  }\n\n  // scale registry\n  const scales = {};\n\n  /**\n   * Augment scales with their type and needed inverse methods.\n   */\n  function create(type, constructor, metadata) {\n    const ctr = function scale() {\n      const s = constructor();\n\n      if (!s.invertRange) {\n        s.invertRange = s.invert ? invertRange(s)\n          : s.invertExtent ? invertRangeExtent(s)\n          : undefined;\n      }\n\n      s.type = type;\n      return s;\n    };\n\n    ctr.metadata = vegaUtil.toSet(vegaUtil.array(metadata));\n\n    return ctr;\n  }\n\n  function scale(type, scale, metadata) {\n    if (arguments.length > 1) {\n      scales[type] = create(type, scale, metadata);\n      return this;\n    } else {\n      return isValidScaleType(type) ? scales[type] : undefined;\n    }\n  }\n\n  // identity scale\n  scale(Identity, $.scaleIdentity);\n\n  // continuous scales\n  scale(Linear, $.scaleLinear, Continuous);\n  scale(Log, $.scaleLog, [Continuous, Log]);\n  scale(Pow, $.scalePow, Continuous);\n  scale(Sqrt, $.scaleSqrt, Continuous);\n  scale(Symlog, $.scaleSymlog, Continuous);\n  scale(Time, $.scaleTime, [Continuous, Temporal]);\n  scale(UTC, $.scaleUtc, [Continuous, Temporal]);\n\n  // sequential scales\n  scale(Sequential, $.scaleSequential, [Continuous, Interpolating]); // backwards compat\n  scale(`${Sequential}-${Linear}`, $.scaleSequential, [Continuous, Interpolating]);\n  scale(`${Sequential}-${Log}`, $.scaleSequentialLog, [Continuous, Interpolating, Log]);\n  scale(`${Sequential}-${Pow}`, $.scaleSequentialPow, [Continuous, Interpolating]);\n  scale(`${Sequential}-${Sqrt}`, $.scaleSequentialSqrt, [Continuous, Interpolating]);\n  scale(`${Sequential}-${Symlog}`, $.scaleSequentialSymlog, [Continuous, Interpolating]);\n\n  // diverging scales\n  scale(`${Diverging}-${Linear}`, $.scaleDiverging, [Continuous, Interpolating]);\n  scale(`${Diverging}-${Log}`, $.scaleDivergingLog, [Continuous, Interpolating, Log]);\n  scale(`${Diverging}-${Pow}`, $.scaleDivergingPow, [Continuous, Interpolating]);\n  scale(`${Diverging}-${Sqrt}`, $.scaleDivergingSqrt, [Continuous, Interpolating]);\n  scale(`${Diverging}-${Symlog}`, $.scaleDivergingSymlog, [Continuous, Interpolating]);\n\n  // discretizing scales\n  scale(Quantile, $.scaleQuantile, [Discretizing, Quantile]);\n  scale(Quantize, $.scaleQuantize, Discretizing);\n  scale(Threshold, $.scaleThreshold, Discretizing);\n\n  // discrete scales\n  scale(BinOrdinal, scaleBinOrdinal, [Discrete, Discretizing]);\n  scale(Ordinal, $.scaleOrdinal, Discrete);\n  scale(Band, band, Discrete);\n  scale(Point, point, Discrete);\n\n  function isValidScaleType(type) {\n    return vegaUtil.hasOwnProperty(scales, type);\n  }\n\n  function hasType(key, type) {\n    const s = scales[key];\n    return s && s.metadata[type];\n  }\n\n  function isContinuous(key) {\n    return hasType(key, Continuous);\n  }\n\n  function isDiscrete(key) {\n    return hasType(key, Discrete);\n  }\n\n  function isDiscretizing(key) {\n    return hasType(key, Discretizing);\n  }\n\n  function isLogarithmic(key) {\n    return hasType(key, Log);\n  }\n\n  function isTemporal(key) {\n    return hasType(key, Temporal);\n  }\n\n  function isInterpolating(key) {\n    return hasType(key, Interpolating);\n  }\n\n  function isQuantile(key) {\n    return hasType(key, Quantile);\n  }\n\n  const scaleProps = ['clamp', 'base', 'constant', 'exponent'];\n\n  function interpolateRange(interpolator, range) {\n    const start = range[0],\n          span = vegaUtil.peek(range) - start;\n    return function(i) { return interpolator(start + i * span); };\n  }\n\n  function interpolateColors(colors, type, gamma) {\n    return $$1.piecewise(interpolate(type || 'rgb', gamma), colors);\n  }\n\n  function quantizeInterpolator(interpolator, count) {\n    const samples = new Array(count),\n          n = count + 1;\n    for (let i = 0; i < count;) samples[i] = interpolator(++i / n);\n    return samples;\n  }\n\n  function scaleCopy(scale) {\n    const t = scale.type,\n          s = scale.copy();\n    s.type = t;\n    return s;\n  }\n\n  function scaleFraction(scale$1, min, max) {\n    let delta = max - min, i, t, s;\n\n    if (!delta || !Number.isFinite(delta)) {\n      return vegaUtil.constant(0.5);\n    } else {\n      i = (t = scale$1.type).indexOf('-');\n      t = i < 0 ? t : t.slice(i + 1);\n      s = scale(t)().domain([min, max]).range([0, 1]);\n      scaleProps.forEach(m => scale$1[m] ? s[m](scale$1[m]()) : 0);\n      return s;\n    }\n  }\n\n  function interpolate(type, gamma) {\n    const interp = $__namespace[method(type)];\n    return (gamma != null && interp && interp.gamma)\n      ? interp.gamma(gamma)\n      : interp;\n  }\n\n  function method(type) {\n    return 'interpolate' + type.toLowerCase()\n      .split('-')\n      .map(function(s) { return s[0].toUpperCase() + s.slice(1); })\n      .join('');\n  }\n\n  const continuous = {\n    blues: 'cfe1f2bed8eca8cee58fc1de74b2d75ba3cf4592c63181bd206fb2125ca40a4a90',\n    greens: 'd3eecdc0e6baabdda594d3917bc77d60ba6c46ab5e329a512089430e7735036429',\n    greys: 'e2e2e2d4d4d4c4c4c4b1b1b19d9d9d8888887575756262624d4d4d3535351e1e1e',\n    oranges: 'fdd8b3fdc998fdb87bfda55efc9244f87f2cf06b18e4580bd14904b93d029f3303',\n    purples: 'e2e1efd4d4e8c4c5e0b4b3d6a3a0cc928ec3827cb97566ae684ea25c3696501f8c',\n    reds: 'fdc9b4fcb49afc9e80fc8767fa7051f6573fec3f2fdc2a25c81b1db21218970b13',\n\n    blueGreen: 'd5efedc1e8e0a7ddd18bd2be70c6a958ba9144ad77319c5d2089460e7736036429',\n    bluePurple: 'ccddecbad0e4a8c2dd9ab0d4919cc98d85be8b6db28a55a6873c99822287730f71',\n    greenBlue: 'd3eecec5e8c3b1e1bb9bd8bb82cec269c2ca51b2cd3c9fc7288abd1675b10b60a1',\n    orangeRed: 'fddcaffdcf9bfdc18afdad77fb9562f67d53ee6545e24932d32d1ebf130da70403',\n    purpleBlue: 'dbdaebc8cee4b1c3de97b7d87bacd15b9fc93a90c01e7fb70b70ab056199045281',\n    purpleBlueGreen: 'dbd8eac8cee4b0c3de93b7d872acd1549fc83892bb1c88a3097f8702736b016353',\n    purpleRed: 'dcc9e2d3b3d7ce9eccd186c0da6bb2e14da0e23189d91e6fc61159ab07498f023a',\n    redPurple: 'fccfccfcbec0faa9b8f98faff571a5ec539ddb3695c41b8aa908808d0179700174',\n    yellowGreen: 'e4f4acd1eca0b9e2949ed68880c97c62bb6e47aa5e3297502083440e723b036034',\n    yellowOrangeBrown: 'feeaa1fedd84fecc63feb746fca031f68921eb7215db5e0bc54c05ab3d038f3204',\n    yellowOrangeRed: 'fee087fed16ffebd59fea849fd903efc7335f9522bee3423de1b20ca0b22af0225',\n\n    blueOrange: '134b852f78b35da2cb9dcae1d2e5eff2f0ebfce0bafbbf74e8932fc5690d994a07',\n    brownBlueGreen: '704108a0651ac79548e3c78af3e6c6eef1eac9e9e48ed1c74da79e187a72025147',\n    purpleGreen: '5b1667834792a67fb6c9aed3e6d6e8eff0efd9efd5aedda971bb75368e490e5e29',\n    purpleOrange: '4114696647968f83b7b9b4d6dadbebf3eeeafce0bafbbf74e8932fc5690d994a07',\n    redBlue: '8c0d25bf363adf745ef4ae91fbdbc9f2efeed2e5ef9dcae15da2cb2f78b3134b85',\n    redGrey: '8c0d25bf363adf745ef4ae91fcdccbfaf4f1e2e2e2c0c0c0969696646464343434',\n    yellowGreenBlue: 'eff9bddbf1b4bde5b594d5b969c5be45b4c22c9ec02182b82163aa23479c1c3185',\n    redYellowBlue: 'a50026d4322cf16e43fcac64fedd90faf8c1dcf1ecabd6e875abd04a74b4313695',\n    redYellowGreen: 'a50026d4322cf16e43fcac63fedd8df9f7aed7ee8ea4d86e64bc6122964f006837',\n    pinkYellowGreen: '8e0152c0267edd72adf0b3d6faddedf5f3efe1f2cab6de8780bb474f9125276419',\n    spectral: '9e0142d13c4bf0704afcac63fedd8dfbf8b0e0f3a1a9dda269bda94288b55e4fa2',\n\n    viridis: '440154470e61481a6c482575472f7d443a834144873d4e8a39568c35608d31688e2d708e2a788e27818e23888e21918d1f988b1fa08822a8842ab07f35b77943bf7154c56866cc5d7ad1518fd744a5db36bcdf27d2e21be9e51afde725',\n    magma: '0000040404130b0924150e3720114b2c11603b0f704a107957157e651a80721f817f24828c29819a2e80a8327db6377ac43c75d1426fde4968e95462f1605df76f5cfa7f5efc8f65fe9f6dfeaf78febf84fece91fddea0fcedaffcfdbf',\n    inferno: '0000040403130c0826170c3b240c4f330a5f420a68500d6c5d126e6b176e781c6d86216b932667a12b62ae305cbb3755c73e4cd24644dd513ae65c30ed6925f3771af8850ffb9506fca50afcb519fac62df6d645f2e661f3f484fcffa4',\n    plasma: '0d088723069033059742039d5002a25d01a66a00a87801a88405a7900da49c179ea72198b12a90ba3488c33d80cb4779d35171da5a69e16462e76e5bed7953f2834cf68f44fa9a3dfca636fdb32ffec029fcce25f9dc24f5ea27f0f921',\n\n    rainbow: '6e40aa883eb1a43db3bf3cafd83fa4ee4395fe4b83ff576eff6659ff7847ff8c38f3a130e2b72fcfcc36bee044aff05b8ff4576ff65b52f6673af27828ea8d1ddfa319d0b81cbecb23abd82f96e03d82e14c6edb5a5dd0664dbf6e40aa',\n    sinebow: 'ff4040fc582af47218e78d0bd5a703bfbf00a7d5038de70b72f41858fc2a40ff402afc5818f4720be78d03d5a700bfbf03a7d50b8de71872f42a58fc4040ff582afc7218f48d0be7a703d5bf00bfd503a7e70b8df41872fc2a58ff4040',\n\n    browns: 'eedbbdecca96e9b97ae4a865dc9856d18954c7784cc0673fb85536ad44339f3632',\n    tealBlues: 'bce4d89dd3d181c3cb65b3c245a2b9368fae347da0306a932c5985',\n    teals: 'bbdfdfa2d4d58ac9c975bcbb61b0af4da5a43799982b8b8c1e7f7f127273006667',\n    warmGreys: 'dcd4d0cec5c1c0b8b4b3aaa7a59c9998908c8b827f7e7673726866665c5a59504e',\n\n    goldGreen: 'f4d166d5ca60b6c35c98bb597cb25760a6564b9c533f8f4f33834a257740146c36',\n    goldOrange: 'f4d166f8be5cf8aa4cf5983bf3852aef701be2621fd65322c54923b142239e3a26',\n    goldRed: 'f4d166f6be59f9aa51fc964ef6834bee734ae56249db5247cf4244c43141b71d3e',\n\n    lightGreyRed: 'efe9e6e1dad7d5cbc8c8bdb9bbaea9cd967ddc7b43e15f19df4011dc000b',\n    lightGreyTeal: 'e4eaead6dcddc8ced2b7c2c7a6b4bc64b0bf22a6c32295c11f85be1876bc',\n    lightMulti: 'e0f1f2c4e9d0b0de9fd0e181f6e072f6c053f3993ef77440ef4a3c',\n    lightOrange: 'f2e7daf7d5baf9c499fab184fa9c73f68967ef7860e8645bde515bd43d5b',\n    lightTealBlue: 'e3e9e0c0dccf9aceca7abfc859afc0389fb9328dad2f7ca0276b95255988',\n\n    darkBlue: '3232322d46681a5c930074af008cbf05a7ce25c0dd38daed50f3faffffff',\n    darkGold: '3c3c3c584b37725e348c7631ae8b2bcfa424ecc31ef9de30fff184ffffff',\n    darkGreen: '3a3a3a215748006f4d048942489e4276b340a6c63dd2d836ffeb2cffffaa',\n    darkMulti: '3737371f5287197d8c29a86995ce3fffe800ffffff',\n    darkRed: '3434347036339e3c38cc4037e75d1eec8620eeab29f0ce32ffeb2c'\n  };\n\n  const discrete = {\n    category10: '1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf',\n    category20: '1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5',\n    category20b: '393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6',\n    category20c: '3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9',\n    tableau10: '4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac',\n    tableau20: '4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5',\n    accent: '7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666',\n    dark2: '1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666',\n    paired: 'a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928',\n    pastel1: 'fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2',\n    pastel2: 'b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc',\n    set1: 'e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999',\n    set2: '66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3',\n    set3: '8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f'\n  };\n\n  function colors(palette) {\n    const n = palette.length / 6 | 0,\n          c = new Array(n);\n\n    for (let i = 0; i < n;) {\n      c[i] = '#' + palette.slice(i * 6, ++i * 6);\n    }\n    return c;\n  }\n\n  function apply(_, f) {\n    for (const k in _) scheme(k, f(_[k]));\n  }\n\n  const schemes = {};\n  apply(discrete, colors);\n  apply(continuous, _ => interpolateColors(colors(_)));\n\n  function scheme(name, scheme) {\n    name = name && name.toLowerCase();\n    if (arguments.length > 1) {\n      schemes[name] = scheme;\n      return this;\n    } else {\n      return schemes[name];\n    }\n  }\n\n  const SymbolLegend  = 'symbol';\n  const DiscreteLegend = 'discrete';\n  const GradientLegend = 'gradient';\n\n  const defaultFormatter = value => vegaUtil.isArray(value)\n    ? value.map(v => String(v))\n    : String(value);\n\n  const ascending = (a, b) => a[1] - b[1];\n  const descending = (a, b) => b[1] - a[1];\n\n  /**\n   * Determine the tick count or interval function.\n   * @param {Scale} scale - The scale for which to generate tick values.\n   * @param {*} count - The desired tick count or interval specifier.\n   * @param {number} minStep - The desired minimum step between tick values.\n   * @return {*} - The tick count or interval function.\n   */\n  function tickCount(scale, count, minStep) {\n    let step;\n\n    if (vegaUtil.isNumber(count)) {\n      if (scale.bins) {\n        count = Math.max(count, scale.bins.length);\n      }\n      if (minStep != null) {\n        count = Math.min(\n          count,\n          Math.floor((vegaUtil.span(scale.domain()) / minStep) || 1)\n        );\n      }\n    }\n\n    if (vegaUtil.isObject(count)) {\n      step = count.step;\n      count = count.interval;\n    }\n\n    if (vegaUtil.isString(count)) {\n      count = scale.type === Time ? vegaTime.timeInterval(count)\n        : scale.type == UTC ? vegaTime.utcInterval(count)\n        : vegaUtil.error('Only time and utc scales accept interval strings.');\n      if (step) count = count.every(step);\n    }\n\n    return count;\n  }\n\n  /**\n   * Filter a set of candidate tick values, ensuring that only tick values\n   * that lie within the scale range are included.\n   * @param {Scale} scale - The scale for which to generate tick values.\n   * @param {Array<*>} ticks - The candidate tick values.\n   * @param {*} count - The tick count or interval function.\n   * @return {Array<*>} - The filtered tick values.\n   */\n  function validTicks(scale, ticks, count) {\n    let range = scale.range(),\n        lo = range[0],\n        hi = vegaUtil.peek(range),\n        cmp = ascending;\n\n    if (lo > hi) {\n      range = hi;\n      hi = lo;\n      lo = range;\n      cmp = descending;\n    }\n\n    lo = Math.floor(lo);\n    hi = Math.ceil(hi);\n\n    // filter ticks to valid values within the range\n    // additionally sort ticks in range order (#2579)\n    ticks = ticks.map(v => [v, scale(v)])\n      .filter(_ => lo <= _[1] && _[1] <= hi)\n      .sort(cmp)\n      .map(_ => _[0]);\n\n    if (count > 0 && ticks.length > 1) {\n      const endpoints = [ticks[0], vegaUtil.peek(ticks)];\n      while (ticks.length > count && ticks.length >= 3) {\n        ticks = ticks.filter((_, i) => !(i % 2));\n      }\n      if (ticks.length < 3) {\n        ticks = endpoints;\n      }\n    }\n\n    return ticks;\n  }\n\n  /**\n   * Generate tick values for the given scale and approximate tick count or\n   * interval value. If the scale has a 'ticks' method, it will be used to\n   * generate the ticks, with the count argument passed as a parameter. If the\n   * scale lacks a 'ticks' method, the full scale domain will be returned.\n   * @param {Scale} scale - The scale for which to generate tick values.\n   * @param {*} [count] - The approximate number of desired ticks.\n   * @return {Array<*>} - The generated tick values.\n   */\n  function tickValues(scale, count) {\n    return scale.bins ? validTicks(scale, scale.bins)\n      : scale.ticks ? scale.ticks(count)\n      : scale.domain();\n  }\n\n  /**\n   * Generate a label format function for a scale. If the scale has a\n   * 'tickFormat' method, it will be used to generate the formatter, with the\n   * count and specifier arguments passed as parameters. If the scale lacks a\n   * 'tickFormat' method, the returned formatter performs simple string coercion.\n   * If the input scale is a logarithmic scale and the format specifier does not\n   * indicate a desired decimal precision, a special variable precision formatter\n   * that automatically trims trailing zeroes will be generated.\n   * @param {Scale} scale - The scale for which to generate the label formatter.\n   * @param {*} [count] - The approximate number of desired ticks.\n   * @param {string} [specifier] - The format specifier. Must be a legal d3\n   *   specifier string (see https://github.com/d3/d3-format#formatSpecifier) or\n   *   time multi-format specifier object.\n   * @return {function(*):string} - The generated label formatter.\n   */\n  function tickFormat(locale, scale, count, specifier, formatType, noSkip) {\n    const type = scale.type;\n    let format = defaultFormatter;\n\n    if (type === Time || formatType === Time) {\n      format = locale.timeFormat(specifier);\n    }\n    else if (type === UTC || formatType === UTC) {\n      format = locale.utcFormat(specifier);\n    }\n    else if (isLogarithmic(type)) {\n      const varfmt = locale.formatFloat(specifier);\n      if (noSkip || scale.bins) {\n        format = varfmt;\n      } else {\n        const test = tickLog(scale, count, false);\n        format = _ => test(_) ? varfmt(_) : '';\n      }\n    }\n    else if (scale.tickFormat) {\n      // if d3 scale has tickFormat, it must be continuous\n      const d = scale.domain();\n      format = locale.formatSpan(d[0], d[d.length - 1], count, specifier);\n    }\n    else if (specifier) {\n      format = locale.format(specifier);\n    }\n\n    return format;\n  }\n\n  function tickLog(scale, count, values) {\n    const ticks = tickValues(scale, count),\n          base = scale.base(),\n          logb = Math.log(base),\n          k = Math.max(1, base * count / ticks.length);\n\n    // apply d3-scale's log format filter criteria\n    const test = d => {\n      let i = d / Math.pow(base, Math.round(Math.log(d) / logb));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k;\n    };\n\n    return values ? ticks.filter(test) : test;\n  }\n\n  const symbols = {\n    [Quantile]:  'quantiles',\n    [Quantize]:  'thresholds',\n    [Threshold]: 'domain'\n  };\n\n  const formats = {\n    [Quantile]:  'quantiles',\n    [Quantize]:  'domain'\n  };\n\n  function labelValues(scale, count) {\n    return scale.bins ? binValues(scale.bins)\n      : scale.type === Log ? tickLog(scale, count, true)\n      : symbols[scale.type] ? thresholdValues(scale[symbols[scale.type]]())\n      : tickValues(scale, count);\n  }\n\n  function thresholdFormat(locale, scale, specifier) {\n    let _ = scale[formats[scale.type]](),\n        n = _.length,\n        d = n > 1 ? _[1] - _[0] : _[0], i;\n\n    for (i=1; i<n; ++i) {\n      d = Math.min(d, _[i] - _[i-1]);\n    }\n\n    // tickCount = 3 ticks times 10 for increased resolution\n    return locale.formatSpan(0, d, 3 * 10, specifier);\n  }\n\n  function thresholdValues(thresholds) {\n    const values = [-Infinity].concat(thresholds);\n    values.max = +Infinity;\n    return values;\n  }\n\n  function binValues(bins) {\n    const values = bins.slice(0, -1);\n    values.max = vegaUtil.peek(bins);\n    return values;\n  }\n\n  const isDiscreteRange = scale =>\n    symbols[scale.type] || scale.bins;\n\n  function labelFormat(locale, scale, count, type, specifier, formatType, noSkip) {\n    const format = formats[scale.type] && formatType !== Time && formatType !== UTC\n      ? thresholdFormat(locale, scale, specifier)\n      : tickFormat(locale, scale, count, specifier, formatType, noSkip);\n\n    return type === SymbolLegend && isDiscreteRange(scale) ? formatRange(format)\n      : type === DiscreteLegend ? formatDiscrete(format)\n      : formatPoint(format);\n  }\n\n  const formatRange = format =>\n    (value, index, array) => {\n      const limit = get(array[index + 1], get(array.max, +Infinity)),\n            lo = formatValue(value, format),\n            hi = formatValue(limit, format);\n      return lo && hi ? lo + ' \\u2013 ' + hi : hi ? '< ' + hi : '\\u2265 ' + lo;\n    };\n\n  const get = (value, dflt) =>\n    value != null ? value : dflt;\n\n  const formatDiscrete = format =>\n    (value, index) => index ? format(value) : null;\n\n  const formatPoint = format =>\n    value => format(value);\n\n  const formatValue = (value, format) =>\n    Number.isFinite(value) ? format(value) : null;\n\n  function labelFraction(scale) {\n    let domain = scale.domain(),\n        count = domain.length - 1,\n        lo = +domain[0],\n        hi = +vegaUtil.peek(domain),\n        span = hi - lo;\n\n    if (scale.type === Threshold) {\n      const adjust = count ? span / count : 0.1;\n      lo -= adjust;\n      hi += adjust;\n      span = hi - lo;\n    }\n\n    return value => (value - lo) / span;\n  }\n\n  function format(locale, scale, specifier, formatType) {\n    const type = formatType || scale.type;\n\n    // replace abbreviated time specifiers to improve screen reader experience\n    if (vegaUtil.isString(specifier) && isTemporal(type)) {\n      specifier = specifier.replace(/%a/g, '%A').replace(/%b/g, '%B');\n    }\n\n    return !specifier && type === Time  ? locale.timeFormat('%A, %d %B %Y, %X')\n      : !specifier && type === UTC ? locale.utcFormat('%A, %d %B %Y, %X UTC')\n      : labelFormat(locale, scale, 5, null, specifier, formatType, true);\n  }\n\n  function domainCaption(locale, scale, opt) {\n    opt = opt || {};\n    const max = Math.max(3, opt.maxlen || 7),\n          fmt = format(locale, scale, opt.format, opt.formatType);\n\n    // if scale breaks domain into bins, describe boundaries\n    if (isDiscretizing(scale.type)) {\n      const v = labelValues(scale).slice(1).map(fmt),\n            n = v.length;\n      return `${n} boundar${n === 1 ? 'y' : 'ies'}: ${v.join(', ')}`;\n    }\n\n    // if scale domain is discrete, list values\n    else if (isDiscrete(scale.type)) {\n      const d = scale.domain(),\n            n = d.length,\n            v = n > max\n              ? d.slice(0, max - 2).map(fmt).join(', ')\n                + ', ending with ' + d.slice(-1).map(fmt)\n              : d.map(fmt).join(', ');\n      return `${n} value${n === 1 ? '' : 's'}: ${v}`;\n    }\n\n    // if scale domain is continuous, describe value range\n    else {\n      const d = scale.domain();\n      return `values from ${fmt(d[0])} to ${fmt(vegaUtil.peek(d))}`;\n    }\n  }\n\n  Object.defineProperty(exports, 'scaleImplicit', {\n    enumerable: true,\n    get: function () {\n      return $.scaleImplicit;\n    }\n  });\n  exports.Band = Band;\n  exports.BinOrdinal = BinOrdinal;\n  exports.DiscreteLegend = DiscreteLegend;\n  exports.Diverging = Diverging;\n  exports.GradientLegend = GradientLegend;\n  exports.Identity = Identity;\n  exports.Linear = Linear;\n  exports.Log = Log;\n  exports.Ordinal = Ordinal;\n  exports.Point = Point;\n  exports.Pow = Pow;\n  exports.Quantile = Quantile;\n  exports.Quantize = Quantize;\n  exports.Sequential = Sequential;\n  exports.Sqrt = Sqrt;\n  exports.SymbolLegend = SymbolLegend;\n  exports.Symlog = Symlog;\n  exports.Threshold = Threshold;\n  exports.Time = Time;\n  exports.UTC = UTC;\n  exports.bandSpace = bandSpace;\n  exports.domainCaption = domainCaption;\n  exports.interpolate = interpolate;\n  exports.interpolateColors = interpolateColors;\n  exports.interpolateRange = interpolateRange;\n  exports.isContinuous = isContinuous;\n  exports.isDiscrete = isDiscrete;\n  exports.isDiscretizing = isDiscretizing;\n  exports.isInterpolating = isInterpolating;\n  exports.isLogarithmic = isLogarithmic;\n  exports.isQuantile = isQuantile;\n  exports.isTemporal = isTemporal;\n  exports.isValidScaleType = isValidScaleType;\n  exports.labelFormat = labelFormat;\n  exports.labelFraction = labelFraction;\n  exports.labelValues = labelValues;\n  exports.quantizeInterpolator = quantizeInterpolator;\n  exports.scale = scale;\n  exports.scaleCopy = scaleCopy;\n  exports.scaleFraction = scaleFraction;\n  exports.scheme = scheme;\n  exports.tickCount = tickCount;\n  exports.tickFormat = tickFormat;\n  exports.tickValues = tickValues;\n  exports.validTicks = validTicks;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","d3","vegaUtil","d3Array","$","$$1","vegaTime","bandSpace","count","paddingInner","paddingOuter","space","invertRange","scale","_","lo","hi","t","invert","invertRangeExtent","range","min","max","n","i","length","invertExtent","undefined","band","rescale","domain","reverse","start","stop","step","round","Math","floor","align","bandwidth","values","map","ordinalRange","scaleOrdinal","unknown","scale.domain","arguments","scale.range","slice","rangeRound","scale.rangeRound","scale.bandwidth","scale.step","scale.round","padding","scale.padding","scale.paddingInner","scale.paddingOuter","scale.align","scale.invertRange","a","bisectRight","b","scale.invert","value","copy","scale.copy","pointish","scaleBinOrdinal","x","bisect","call","toNumber","tickFormat","scale.tickFormat","specifier","peek","create","type","constructor","metadata","ctr","s","toSet","array","scales","isValidScaleType","hasOwnProperty","hasType","key","isDiscrete","Discrete","isDiscretizing","Discretizing","isLogarithmic","Log","isTemporal","Temporal","interpolateColors","colors","gamma","piecewise","interpolate","interp","$__namespace","method","toLowerCase","split","toUpperCase","join","palette","c","Array","apply","f","k","scheme","name","schemes","validTicks","ticks","cmp","ascending","descending","ceil","v","filter","sort","endpoints","tickValues","bins","locale","formatType","noSkip","format","defaultFormatter","Time","timeFormat","UTC","utcFormat","varfmt","formatFloat","test","tickLog","d","formatSpan","base","logb","log","pow","labelValues","Infinity","concat","thresholds","labelFormat","formats","SymbolLegend","symbols","formatRange","DiscreteLegend","formatDiscrete","formatPoint","_interopNamespace","e","__esModule","Object","keys","forEach","getOwnPropertyDescriptor","defineProperty","get","enumerable","freeze","prototype","Identity","scaleIdentity","Linear","scaleLinear","Continuous","scaleLog","Pow","scalePow","Sqrt","scaleSqrt","Symlog","scaleSymlog","scaleTime","scaleUtc","Sequential","scaleSequential","Interpolating","scaleSequentialLog","scaleSequentialPow","scaleSequentialSqrt","scaleSequentialSymlog","scaleDiverging","scaleDivergingLog","scaleDivergingPow","scaleDivergingSqrt","scaleDivergingSymlog","Quantile","scaleQuantile","Quantize","scaleQuantize","Threshold","scaleThreshold","BinOrdinal","Ordinal","Band","Point","point","scaleProps","discrete","category10","category20","category20b","category20c","tableau10","tableau20","accent","dark2","paired","pastel1","pastel2","set1","set2","set3","continuous","blues","greens","greys","oranges","purples","reds","blueGreen","bluePurple","greenBlue","orangeRed","purpleBlue","purpleBlueGreen","purpleRed","redPurple","yellowGreen","yellowOrangeBrown","yellowOrangeRed","blueOrange","brownBlueGreen","purpleGreen","purpleOrange","redBlue","redGrey","yellowGreenBlue","redYellowBlue","redYellowGreen","pinkYellowGreen","spectral","viridis","magma","inferno","plasma","rainbow","sinebow","browns","tealBlues","teals","warmGreys","goldGreen","goldOrange","goldRed","lightGreyRed","lightGreyTeal","lightMulti","lightOrange","lightTealBlue","darkBlue","darkGold","darkGreen","darkMulti","darkRed","isArray","String","index","dflt","Number","isFinite","limit","scaleImplicit","Diverging","GradientLegend","domainCaption","opt","maxlen","isString","replace","fmt","interpolateRange","interpolator","span","isContinuous","isInterpolating","isQuantile","labelFraction","adjust","quantizeInterpolator","samples","scaleCopy","scaleFraction","scale$1","delta","indexOf","m","constant","tickCount","minStep","isNumber","isObject","interval","timeInterval","utcInterval","error","every"]
}
